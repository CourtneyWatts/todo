{"version":3,"sources":["icons/add-button.svg","icons/delete.svg","icons/edit.svg","components/NewTodoForm.js","components/Todo.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NewTodoForm","props","state","name","handleChange","bind","handleSubmit","evt","target","value","length","this","setState","preventDefault","addNewTodo","id","uuidv4","completed","className","onClick","onChange","type","src","AddIcon","Component","Todo","handleRemove","handleEdit","handleSave","handleTaskClick","remove","edit","save","editMode","toggleCompleted","view","editButton","EditIcon","DeleteIcon","TodoList","todos","addTodo","removeTodo","editTodo","saveTodo","newTodo","todoToRemove","updatedListOfTodos","filter","todo","todoID","indexToEdit","findIndex","console","log","input","document","getElementById","querySelector","focus","newName","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4129e8ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add-button.5360a889.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.c7e6fe43.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.014be509.svg\";","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport './NewTodoForm.scss'\nimport AddIcon from '../icons/add-button.svg'\n\nexport default class NewTodoForm extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange (evt) {\n    if (evt.target.value.length >= 50) {\n      return\n    }\n    this.setState({\n      [evt.target.name]: evt.target.value\n    })\n  }\n\n  handleSubmit (evt) {\n    evt.preventDefault()\n    if (!this.state.name) {\n      return\n    }\n    this.props.addNewTodo({ ...this.state, id: uuidv4(), completed: false })\n    this.setState({\n      name: ''\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <form className='NewTodoForm' onClick={this.handleSubmit}>\n          <input name='name' onChange={this.handleChange} value={this.state.name} type='text' />\n          <div className='addBtn'>\n            <button><img src={AddIcon} /></button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './todo.scss'\nimport DeleteIcon from '../icons/delete.svg'\nimport EditIcon from '../icons/edit.svg'\n\nexport default class Todo extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: this.props.name,\n      id: this.props.id,\n      completed: this.props.completed\n    }\n    this.handleRemove = this.handleRemove.bind(this)\n    this.handleEdit = this.handleEdit.bind(this)\n    this.handleSave = this.handleSave.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSave = this.handleSave.bind(this)\n    this.handleTaskClick = this.handleTaskClick.bind(this)\n  }\n\n  handleRemove () {\n    this.props.remove()\n  }\n\n  handleEdit () {\n    this.props.edit()\n  }\n\n  handleSave () {\n    if (!this.state.name) {\n      return\n    }\n    this.props.save(this.props.id, this.state.name)\n  }\n\n  handleChange (evt) {\n    if (evt.target.value.length >= 50) {\n      return\n    }\n    this.setState({\n      [evt.target.name]: evt.target.value\n    })\n  }\n\n  handleTaskClick (editMode, id) {\n    if (editMode) {\n      return\n    }\n    this.props.toggleCompleted(id)\n  }\n\n  render () {\n    const view = !this.props.editMode\n      ? <p className=''>{this.props.name}</p>\n      : <input name='name' onChange={this.handleChange} value={this.state.name} type='text' />\n    const editButton = !this.props.editMode\n      ? <img src={EditIcon} onClick={this.handleEdit} />\n      : <div className='btn' onClick={this.handleSave}>SAVE</div>\n    return (\n      <div id={this.props.id} className={this.props.completed ? 'completed Todo' : 'Todo'}>\n        <div className='task' onClick={() => { this.handleTaskClick(this.props.editMode, this.props.id) }}>\n          {view}\n        </div>\n        <div className='btns'>\n          <div className='btn'>\n            {editButton}\n          </div>\n          <div className='btn'>\n            <img src={DeleteIcon} onClick={this.handleRemove} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NewTodoForm from './NewTodoForm'\nimport Todo from './Todo'\nimport './todolist.scss'\n\nclass TodoList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      todos: []\n    }\n    this.addTodo = this.addTodo.bind(this)\n    this.removeTodo = this.removeTodo.bind(this)\n    this.editTodo = this.editTodo.bind(this)\n    this.saveTodo = this.saveTodo.bind(this)\n    this.toggleCompleted = this.toggleCompleted.bind(this)\n  }\n\n  addTodo (newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    })\n  }\n\n  removeTodo (todoToRemove) {\n    const updatedListOfTodos = this.state.todos.filter(todo => todo.id !== todoToRemove)\n    this.setState({\n      todos: updatedListOfTodos\n    })\n  }\n\n  editTodo (todoID) {\n    const indexToEdit = this.state.todos.findIndex(todo => todo.id === todoID)\n    const todos = [...this.state.todos]\n    todos[indexToEdit].editMode = true\n    console.log(todos)\n    this.setState({\n      todos: todos\n    }, function () {\n      const input = document.getElementById(todoID)\n\n      console.log(input.querySelector('input'))\n\n      input.querySelector('input').focus()\n    })\n  }\n\n  saveTodo (id, newName) {\n    const indexToEdit = this.state.todos.findIndex(todo => todo.id === id)\n    const todos = [...this.state.todos]\n    todos[indexToEdit].editMode = false\n    todos[indexToEdit].name = newName\n    console.log(id)\n    console.log(newName)\n    this.setState({\n      todos: todos\n    })\n  }\n\n  toggleCompleted (id) {\n    const indexToEdit = this.state.todos.findIndex(todo => todo.id === id)\n    const todos = [...this.state.todos]\n    todos[indexToEdit].completed = !todos[indexToEdit].completed\n    this.setState({\n      todos: todos\n    })\n  }\n\n  render () {\n    const todos = this.state.todos.map((todo) => {\n      return <Todo name={todo.name} key={todo.id} id={todo.id} toggleCompleted={this.toggleCompleted} completed={todo.completed} editMode={todo.editMode} edit={() => { this.editTodo(todo.id) }} save={this.saveTodo} remove={() => { this.removeTodo(todo.id) }} />\n    })\n    return (\n      <div className='Todolist'>\n        <h1>Todo List!</h1>\n        <NewTodoForm addNewTodo={this.addTodo} />\n        {todos}\n      </div>\n    )\n  }\n}\n\nexport default TodoList\n","import React from 'react'\nimport './App.css'\nimport TodoList from './components/TodoList'\n\nfunction App () {\n  return (\n    <div className='App'>\n      <TodoList />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}